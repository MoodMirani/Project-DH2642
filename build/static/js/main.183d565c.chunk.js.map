{"version":3,"sources":["spotify.js","Login.js","DataLayer.js","PopifySearchView.js","musicSource.js","assets/spinner-big.gif","promiseNoData.js","view/trackDetailsView.js","view/trackDetailsNoLyricsView.js","lyricsSource.js","usePromise.js","firebase-config.js","FooterView.js","model/firebase-manager.js","view/trackDetailsNullView.js","presenter/lyricsSearch.js","searchResultsView.js","play.js","artistView.js","artist.js","PopifySearch.js","playback.js","loadscript.js","albumView.js","album.js","likedmusicView.js","likedmusic.js","Main.js","App.js","reducer.js","index.js"],"names":["BASE_URL","loginUrl","join","requestHeader","token","Login","className","src","alt","border","href","StateContext","createContext","DataLayer","reducer","initialState","children","Provider","value","useReducer","useDataLayerValue","useContext","PopifySearchView","onSearch","React","useState","text","setText","type","setType","Fragment","height","id","placeholder","onChange","e","target","map","k","onClick","document","getElementById","addEventListener","event","preventDefault","keyCode","click","MusicSource","search","index","fetch","then","data","json","items","searchAlbum","searchTrack","promiseNoData","promise","error","Loading","TrackDetailsView","spotifyObject","lyricsData","album","images","url","artists","name","to","lyrics_copyright","style","whiteSpace","lyrics_body","TrackDetailsNoLyricsView","key","LyricsSource","getId","artist","song","encodeURI","response","res","message","body","track_list","track","track_id","catch","err","console","getLyrics","lyrics","matchLyrics","usePromise","setData","setError","useEffect","dt","er","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FooterView","currentTrack","player","user","likedSongs","dispatch","getUserLikes","setValue","Grid","item","FavoriteBorder","fontSize","log","includes","newLikeSongs","flat","database","ref","set","Likes","LibraryMusic","fill","PlayCircleOutline","resume","PauseCircleOutline","pause","FormatAlignLeft","container","spacing","VolumeDown","xs","Slider","newValue","setVolume","valueLabelDisplay","TrackDetailsNullView","LyricsSearch","setPromise","a","undefined","SearchResultsView","searchResult","set_currentTrack","set_currentArtist","set_currentAlbum","result","Play","spotify_uri","playerInstance","_options","getOAuthToken","access_token","method","JSON","stringify","uris","headers","ArtistView","currentArtist","followers","total","genres","popularity","ArtistInfo","PopifySearch","userID","replace","once","snapshot","val","likedList","Object","values","getLikes","uri","currentAlbum","Playback","cb","scr","createElement","readyState","onreadystatechange","onload","getElementsByTagName","appendChild","loadScript","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","callback","volume","addListener","device_id","connect","AlbumView","albumTracks","track_number","AlbumInfo","LikedmusicView","Liked","Main","spotify","path","SpotifyWebApi","App","hash","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","setAccessToken","getMe","getUserPlaylists","playlists","getPlaylist","playlist","discover_weekly","state","action","currentUser","ReactDOM","render","StrictMode","playing"],"mappings":"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","file":"static/js/main.183d565c.chunk.js","sourcesContent":["// SETTINGS\n\n\nconst AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"; // will be used to show authorize popup to access your Spotify account from your app.\nconst REDIRECT_URL = \"http://localhost:3000/\";          // will be the URL where you want the user to be redirected once the user is authorized successfully.                                \nconst CLIENT_ID = \"0ce6ae9e52b0477a86e4b06d7135b5d2\"; \nconst SCOPES = [                                \n    \"streaming\", \n    \"user-read-email\", \n    \"user-read-private\",\n    \"user-modify-playback-state\"\n];\n\nexport const BASE_URL = \"https://api.spotify.com/v1\";\n\nexport const loginUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL}&scope=${SCOPES.join(\"%20\")}&response_type=token&show_dialog=true`;\n\nexport const getTokenFromUrl = () => {                            \n    return window.location.hash\n        .substring(1)\n        .split(\"&\")\n        .reduce((initial, item) => {\n            let parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n            return initial;\n    }, {});\n};\n\nexport const requestHeader = token => {\n    return {\n        \"method\": \"GET\",\n        \"headers\": {\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        }\n    }\n};\n","import React from \"react\";\nimport \"./Login.css\";\nimport { loginUrl } from \"./spotify\"; //enable our users to Login through the app\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://i.ibb.co/rsCJb8L/popify-Logo.png\" \n        alt=\"Popify logo\"\n        border=\"0\"\n      />\n      <a href={loginUrl}>START POPIFYING</a>\n    </div>\n  );\n}\n\nexport default Login;\n\n","import React, { createContext, useContext, useReducer } from \"react\";\n\n// This DataLayer collects data whenever it is needed. We don't need\n// to pass down information as props when using this\n\nexport const StateContext = createContext();\n\nexport const DataLayer = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\n\nexport const useDataLayerValue = () => useContext(StateContext);\n\n\n\n","import React from \"react\";\nimport \"./popify.css\";\n\n\n\nfunction PopifySearchView({onSearch}){\n\n    const [text, setText]= React.useState(\"\");\n    const [type, setType]= React.useState(\"\");\n\n    const message = `What do you want to listen to?`;\n   \n    return(\n\n        \n        <React.Fragment>\n        \n        <img className=\"logo\"\n        src=\"https://i.ibb.co/283SGvS/popi-Trans.png\" \n        alt=\"Popify logo\"\n        height=\"100px\"/>\n\n            <input className=\"searchbar\" id=\"searchbar_id\" placeholder= {message}  onChange={(e) => setText(e.target.value)}/>\n                <select className=\"options\" onChange={(e) => setType(e.target.value)}>\n                <option value= \"\" > Choose: </option> \n                    {[\"album\", \"artist\", \"track\"].map(k=> <option key={k} value={k}>{k}</option>) }\n                </select>    \n            <button className= \"btnSearch\" id=\"searchbtn_id\" onClick ={(e) => onSearch(type, text)}>Search!</button>\n            <script>\n            \n            {document.getElementById(\"searchbar_id\") !== null ? document.getElementById(\"searchbar_id\")\n            .addEventListener(\"keyup\", function(event) {\n            event.preventDefault();\n            if (event.keyCode === 13) {\n            document.getElementById(\"searchbtn_id\").click();\n            }\n                }) : \"\"}\n            </script>\n        \n        </React.Fragment>\n        \n    )\n}\n\nexport default PopifySearchView ","import { BASE_URL, requestHeader } from \"./spotify\"\n\nconst MusicSource = {\n    \n    search({type, text, token}) { \n        if(type==null){type=\"\"} \n        if(text==null){text=\"\"}\n\n        \n\n        let index = type + \"s\"\n        return fetch(BASE_URL+ \"/search?q=\"+text+\"&type=\"+type, requestHeader(token))\n            .then(data => data.json())\n            .then(data => data[index].items);\n    },\n    searchAlbum({id,token}){\n        return fetch(`${BASE_URL}/albums/${id}/tracks`, requestHeader(token))\n            .then(data => data.json())\n        \n\n    },\n    searchTrack({id,token}){\n        return fetch(`${BASE_URL}/tracks/${id}`, requestHeader(token))\n            .then(data => data.json())\n\n    }\n};\n\nexport default MusicSource; \n","export default __webpack_public_path__ + \"static/media/spinner-big.07d0e5bd.gif\";","import React from \"react\";\nimport Loading from './assets/spinner-big.gif';\nimport \"./popify.css\"\n\nfunction promiseNoData(promise, data, error){  \n    return  (!promise && \"no data\")     // case \"0\"  \n          || (error && <h1>error</h1>)   // case 3 \n          || (!data && <img className=\"centrePROM\" src={Loading} alt=\"\"/>)  // case 1\n}\nexport default promiseNoData;","import React from \"react\";\nimport \"../TrackDetailsView.css\"\nimport {Link} from \"react-router-dom\";\nimport \"../popify.css\";\n\nconst TrackDetailsView =({spotifyObject, lyricsData})=>\n   <div className=\"flexboxWrapper\">\n      <div className=\"row\">\n\n         <div className=\"column\">\n            <div className=\"trackContainer\"> \n               <img className=\"trackPic\" src = { spotifyObject.album.images[0] && spotifyObject.album.images[0].url } alt=\"\" />\n            </div>\n         </div>\n      \n\n         <div className=\"column\">\n            <div className=\"lyricsContainer\">\n               <p className=\"headingTitle\">\n                  <span className=\"artistTitle\">{spotifyObject.artists[0].name}</span>\n                  <span className=\"trackTitle\">{spotifyObject.name}</span>\n                  \n               </p>\n               <Link to=\"/\">\n                  <button className =\"button\">Back to search</button>\n               </Link>\n               <p className=\"lyricsCopy\" >{lyricsData.lyrics_copyright}</p>\n               <p className=\"lyricsStyle\" style={{whiteSpace: 'pre-line'}}>{lyricsData.lyrics_body}</p>\n              \n               \n            </div>\n         </div>\n\n      </div>\n\n   </div>\n   \n\nexport default TrackDetailsView; \n\n\n","import React from \"react\";\nimport \"../TrackDetailsView.css\"\nimport {Link} from \"react-router-dom\"\n\nconst TrackDetailsNoLyricsView =({spotifyObject})=>\n   <div className=\"flexboxWrapper\">\n      <div className=\"row\">\n\n         <div className=\"column\">\n            <div className=\"trackContainer\"> \n               <img className=\"trackPic\" src = { spotifyObject.album.images[0] && spotifyObject.album.images[0].url } alt=\"\" />\n            </div>\n         </div>\n\n         <div className=\"column\">\n            <div className=\"lyricsContainer\">\n               <p className=\"headingTitle\">\n                  <span className=\"artistTitle\">{spotifyObject.artists[0].name}</span>\n                  <span className=\"trackTitle\">{spotifyObject.name}</span>\n               </p>\n               <Link to=\"/\">\n                  <button className =\"button\">Back to search</button>\n               </Link>\n               <p className=\"lyricsStyle\" style={{whiteSpace: 'pre-line'}}>There is no lyrics avaible for this track</p>\n            </div>\n         </div>\n\n      </div>\n   </div>\n   \n\nexport default TrackDetailsNoLyricsView; \n\n","const key = \"df5661c198e8ac1b5dba0f079f8458ff\"\n\nconst LyricsSource = {\n    getId(artist, song){\n        // https://popify-app-heroku-deploy.herokuapp.com/  Doesnt work yet\n\n        return fetch(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_artist=${encodeURI(artist)}&q_track=${encodeURI(song)}&apikey=${key}`, {\n            \"method\": \"GET\",\n        })\n        .then(response => response.json())\n        .then(res => (res.message.body.track_list[0]).track.track_id)\n        .catch(err => \n            console.error(err)\n        )\n     \n    },\n    getLyrics(id){ \n        return fetch(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${id}&apikey=${key}`, {\n            \"method\": \"GET\",           \n        })\n    .then(res => res.json())\n    .then(res => (res.message.body.lyrics))\n    \n    \n   \n    },\n    matchLyrics(artist, song){\n        return fetch(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/matcher.track.get?q_artist=${encodeURI(artist)}&q_track=${encodeURI(song)}&apikey=${key}`, \n        {\n            \"method\": \"GET\",\n        })\n        .then(response => response.json())\n        .then(res => (res.message.body))\n        \n    },\n   \n}\n\nexport default LyricsSource;\n\n","// reactjs/usePromise.js\nimport React from \"react\";\n\nfunction usePromise(promise) {  \n    const [data, setData]= React.useState(null);\n    const [error, setError]= React.useState(null);\n    React.useEffect(function(){ \n        setData(null); \n        setError(null);\n        promise && promise.then(dt=>setData(dt)).catch(er=>setError(er))\n       ;\n     }, [promise]);\n    return [data, error];\n}\n\nexport default usePromise;\n","import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAz-PmJus3p1-JkkwjHniXXGCOGRCKcJdI\",\n    authDomain: \"popify-dh2642.firebaseapp.com\",\n    databaseURL: \"https://popify-dh2642-default-rtdb.firebaseio.com/\",\n    projectId: \"popify-dh2642\",\n    storageBucket: \"popify-dh2642.appspot.com\",\n    messagingSenderId: \"1082530079583\",\n    appId: \"1:1082530079583:web:55bc14c921a60f52840cea\",\n    measurementId: \"G-ZVQZ20ZBXF\"\n  };\n  // Initialize Firebase\n  var fire = firebase.initializeApp(firebaseConfig);\n  // firebase.analytics();\n/*\n  export const auth = firebase.auth;\n  export const db = firebase.database;\n*/\n  export default fire;","import React from \"react\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport {Likes} from \"./model/firebase-manager\"\nimport {Link} from \"react-router-dom\";\n\nimport \"./popify.css\";\nimport \"./Footer.css\";\n\nimport {\n  PauseCircleOutline,\n  PlayCircleOutline,\n  VolumeDown,\n  FavoriteBorder,\n  LibraryMusic,\n  FormatAlignLeft,\n\n} from \"@material-ui/icons\";\n\nfunction FooterView({currentTrack, player, user, likedSongs, getUserLikes, dispatch}) {\n  const [value, setValue] = React.useState(30);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    player.setVolume(value/100)\n  };\n\n  \n  return (  \n  \n    <div className=\"footer__play\">\n      <div className=\"footer__left\">\n\n      {currentTrack === null ? <img alt=\"\"/> :\n\n        <img alt=\"\"\n        className=\"footer__albumLogo\"\n        src= {currentTrack.type === \"track\" ? currentTrack.album.images[0].url : \"\" } />  \n\n      }\n        <div className=\"footer__songInfo\">\n          <h4>{ currentTrack !== null ? currentTrack.name : \"Welcome!\"}</h4>\n        <div className=\"grey_name\" >\n          <h5>{ currentTrack !== null ? currentTrack.artists[0].name : \"\"}</h5></div>\n        </div>\n\n        <Grid item>\n          <FavoriteBorder fontSize=\"large\" className=\"footer__icon\" onClick = {()=>{console.log(\"footerview\", currentTrack.name, user);\n          if(currentTrack){Likes(currentTrack, user, dispatch, likedSongs)}}}></FavoriteBorder>\n        </Grid>\n\n        <Link to=\"/liked\">\n          <Grid item>\n            <LibraryMusic fontSize=\"large\" className=\"footer__icon\" style={{fill: \"white\"}}/>\n          </Grid>\n        </Link>\n\n      </div>\n      \n      <div className=\"footer__center\">\n       \n        <PlayCircleOutline fontSize=\"large\" className=\"footer__icon\" onClick = {() => player.resume()} /> \n        <PauseCircleOutline fontSize=\"large\" className=\"footer__icon\" onClick = {() => player.pause()}/> \n        <Link to=\"/lyrics\">\n          <Grid item>\n          {(currentTrack === null)? \n              <FormatAlignLeft  style={{fill: \"gray\"}} fontSize=\"large\" className=\"footer__icon\" /> :\n              <FormatAlignLeft  style={{fill: \"white\"}} fontSize=\"large\" className=\"footer__icon\" />}\n\n          </Grid>\n        </Link>\n      \n\n      </div>\n      {/*\n      <Link to=\"/lyrics\">\n        <button className =\"lyricsButton\" disabled={currentTrack === null}>LYRICS</button>\n      </Link>*/}\n\n      \n\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <VolumeDown />\n          </Grid>\n          <Grid item xs>\n            <Slider value={value} onChange={handleChange} valueLabelDisplay=\"auto\"/>\n          </Grid>\n        </Grid>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default FooterView;","import React from \"react\";\nimport fire from \"../firebase-config\"\nimport { useDataLayerValue } from \"../DataLayer\";\n/*\nexport const getItinerary = (userName) => {\n  const temp = []\n  return dispatch => {\n      dispatch(itineraryFetchRequest())\n      db.collection('itinerary').where('user', '==', userName.toLowerCase()).get()\n      .then(snapshot => {\n        snapshot.forEach(doc => {\n          temp.push(doc.data())\n        })\n      })\n        .then (itinerary => {\n          if(temp.length === 0) dispatch({type: FETCH_ITINERARIES_EMPTY})\n          else dispatch({type: FETCH_ITINERARIES_SUCCESS, payload: temp})\n            \n        })\n      .catch(err => {\n        console.log('Error getting documents', err);\n  })\n}}\n*/\n\nconst getLikes = (user, dispatch)=>{\n  const userID = user.id\n  \n  return fire.database().ref('users/' + userID.replace(\".\", \"/\")).once(\"value\", snapshot => {\n    if (snapshot.val()) {\n      const likedList = Object.values(snapshot.val())\n      //console.log(\"inside getlikes\",likedList)\n      dispatch({\n        type: \"SET_LIKEDSONGS\",\n        likedSongs: likedList,\n    });\n      //console.log(\"inside getuserlikes \",snapshot.val)\n      } \n    })\n}\n\n/*\nfunction GetUserLikes(user, likedSongs){\n  if(user && likedSongs===null) {\n    fire.database().ref('users/' + user.id).once(\"value\", snapshot => {\n      if (snapshot.val()) {\n        const likedList = Object.values(snapshot.val())\n        console.log(\"getuserlikes \",likedList)\n        //console.log(\"inside getuserlikes \",snapshot.val)\n        return likedList;\n        }\n      })\n  }\n  else{\n    console.log(\"userlikes not work\", user, likedSongs)\n  }\n\n\n}\n*/\n/*\n\n\nfunction GetUserLikes(){\n    const [{currentTrack, user, likedSongs }, dispatch] = useDataLayerValue();\n    if(user && likedSongs===null) {\n      fire.database().ref('users/' + user.id).once(\"value\", snapshot => {\n        if (snapshot.val()) {\n          const likedSongs = Object.values(snapshot.val())\n          console.log(\"getuserlikes \",likedSongs)\n          //console.log(\"inside getuserlikes \",snapshot.val)\n          }\n        })\n        dispatch({\n          type: \"SET_LIKEDSONGS\",\n          likedSongs: likedSongs,\n      });\n    }\n    else {\n      console.log(\"skipping GetUserLikes\")\n    }\n}\n\n*/\nconst Likes = (currentTrack, user, dispatch, likedSongs) => {\n  \n    if(!likedSongs.includes(currentTrack.name)){\n      const newLikeSongs = [currentTrack.name, ...likedSongs.flat()];\n      //console.log(\"inside likes2\", likedSongs)\n      dispatch({\n        type: \"SET_LIKEDSONGS\",\n        likedSongs: newLikeSongs,\n      });\n      //console.log(\"inside likes\",newLikeSongs)\n\n      fire.database().ref('users/' + user.id).set({\n        Likes: newLikeSongs\n      });\n\n      //console.log(\"its done\")\n    }\n \n    /*  \n    let ref =  fire.database().ref(\"Steve\");\n    fire.database().ref(\"Steve\").push({Likes: currentTrack});*/\n   \n}\n\n\n\nexport {Likes, getLikes}","import React from \"react\";\nimport \"../TrackDetailsView.css\"\nimport {Link} from \"react-router-dom\"\n\nconst TrackDetailsNullView =({})=>\n   <div className=\"flexboxWrapper\" >\n       <div className=\"nullButton\">\n      <Link to=\"/\">\n                  <button className =\"button\">You need to select a track to view lyrics</button>\n        </Link>\n        </div>\n   </div>\n   \n\nexport default TrackDetailsNullView; \n\n","import React, {Fragment} from \"react\";\nimport TrackDetailsView from \"../view/trackDetailsView\";\nimport TrackDetailsNoLyricsView from \"../view/trackDetailsNoLyricsView\";\nimport LyricsSource from \"../lyricsSource\";\nimport { useDataLayerValue } from \"../DataLayer\";\nimport usePromise from '../usePromise'\nimport FooterView from \"../FooterView\"\nimport TrackDetailsNullView from \"../view/trackDetailsNullView\";\nimport promiseNoData from '../promiseNoData'\n\n\n\n\nfunction LyricsSearch(){\n    const [{currentTrack, player, user}, ] = useDataLayerValue();\n    const [promise, setPromise] = React.useState();\n\n    \n    React.useEffect(async() => {\n               \n                if (currentTrack){\n                    const id = await LyricsSource.getId(currentTrack.artists[0].name, currentTrack.name)\n                    setPromise(LyricsSource.getLyrics(id))\n\n                }},[currentTrack]) \n\n\n    const [data, error] = usePromise(promise);\n   \n      \n\n    return ( \n    \n        <Fragment>\n            {promiseNoData(promise, data, error) || \n            <Fragment>\n                {currentTrack && data && <TrackDetailsView spotifyObject={currentTrack} lyricsData={data}/>}\n                {(data === undefined) && currentTrack && <TrackDetailsNoLyricsView spotifyObject={currentTrack} /> }\n                {(data === null) && (currentTrack == null) && <TrackDetailsNullView spotifyObject={currentTrack} /> }\n                <FooterView currentTrack={currentTrack} player={player} user={user}/>\n            </Fragment> }\n        </Fragment>\n    )\n}\n\nexport default LyricsSearch; \n\n\n/*\n\nTo FIX: some kind of alternte rendering pending on if data = defined eller undefined\nUpdate heroku path for cors handeling (need to mearch branches with main to do that)\n\n{currentTrack && (data === \"undefined\") && <TrackDetailsNoLyricsView spotifyObject={currentTrack}/>}\n\n( (data === \"undefined\") && currentTrack && <TrackDetailsNoLyricsView spotifyObject={currentTrack} /> )\n            \n            \n            ||*/\n\n","import React from \"react\";\nimport \"./searchResult.css\"\n//import LyricsSource from \"./lyricsSource\";\n//import scrapeLyrics from \"./presenter/lyricsScraper\";\nimport \"./popify.css\"\nimport \"./App.css\"\nimport LyricsSearch from \"./presenter/lyricsSearch\"\nimport {Link} from \"react-router-dom\";\n\n\nconst SearchResultsView=({searchResult, set_currentTrack, set_currentArtist, set_currentAlbum})=>{\n\n    return <div  className=\"searchMODE\">{\n       \n        searchResult.map(result=>\n            <span key={result.id} className=\"searchResult\" >    \n\n        \n            <div className=\"searchName\"><b>{result.name}</b> {result.artist} </div>\n\n            {\n            result.type === \"artist\" ? \n            <Link to=\"/artist\">\n                <img className=\"searchPic\" onClick = { () => { set_currentArtist(result) } } \n                src = { result.images[0]? result.images[0].url : \"https://suitabletech.com/images/HelpCenter/errors/Lenovo-Camera-Error.JPG\" }  alt=\"\" />\n            </Link>\n            : \n\n            result.type===\"track\" ?\n            (\n             <Link to=\"/track\">\n        \n            <img className=\"searchPic\" onClick = { () => { set_currentTrack(result)}}\n        \n            src = { result.album.images[0] && result.album.images[0].url } alt=\"\" />\n            </Link>      \n            ) \n            :\n\n            \n\n            result.type === \"album\" &&\n\n            (<Link to=\"/album\">\n            <img className=\"searchPic\" onClick = { () => { set_currentAlbum(result) } } \n            src = { result.images[0]? result.images[0].url : \"https://suitabletech.com/images/HelpCenter/errors/Lenovo-Camera-Error.JPG\" }  alt=\"\" />\n            </Link>   )}           \n            </span>\n        )\n        }    \n    </div>\n \n    }\n\nexport default SearchResultsView;\n","\nfunction Play({\n    spotify_uri,\n    playerInstance: {\n      _options: {\n        getOAuthToken,\n        id\n      }\n    }\n  }) {\n\n    getOAuthToken(access_token => {\n      fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris: [spotify_uri] }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + access_token\n        },\n      });\n    });\n}\n\n  export default Play;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./artist.css\"\n\n\nconst ArtistView = ({currentArtist}) => {\n    return(\n\n    <div className=\"style\">\n        <Link to=\"/\">\n        <button className =\"button\">Back to search</button>\n        </Link>\n        <div className=\"artistName\">{currentArtist.name} </div>\n        <img className=\"artistPic\" src = {currentArtist.images[0].url} alt=\"\" />\n        <div className=\"artistInfo\">Followers: {currentArtist.followers.total} </div>\n        <div className=\"artistInfo\">Genre: {currentArtist.genres[0]} </div>\n        <div className=\"artistInfo\">Popularity: {currentArtist.popularity} </div>\n    </div>\n    )\n\n    \n}\n\nexport default ArtistView ","import React, {Fragment} from \"react\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport \"./artist.css\"\nimport \"./searchResult.css\"\nimport {Link} from \"react-router-dom\";\nimport \"./popify.css\"\nimport FooterView from \"./FooterView\";\nimport ArtistView from \"./artistView\";\n\nfunction ArtistInfo(){\n    \n    const [{currentArtist, player, user, currentTrack}] = useDataLayerValue();\n   \n    return (\n        <Fragment>\n        <ArtistView currentArtist={currentArtist}/>\n        <FooterView currentTrack={currentTrack} player={player} user={user}/>\n        </Fragment> \n    )\n}\n\nexport default ArtistInfo; \n","import React, {Fragment, useEffect} from \"react\";\nimport PopifySearchView from \"./PopifySearchView\";\nimport MusicSource from \"./musicSource.js\"\nimport { useDataLayerValue } from \"./DataLayer\";\nimport promiseNoData from './promiseNoData'\nimport SearchResultsView from './searchResultsView'\nimport usePromise from './usePromise'\nimport Play from \"./play\"\nimport FooterView from \"./FooterView\"\nimport ArtistInfo from \"./artist\"\nimport {getLikes, GetUserLikes} from \"./model/firebase-manager\"\n\nfunction PopifySearch(){\n    const [{ player, token, currentTrack, user, likedSongs }, dispatch] = useDataLayerValue();\n    const [promise, setPromise] = React.useState(null);\n    const [data, error] = usePromise(promise);\n    \n    useEffect(()=>{\n        if(user){\n        const likes = getLikes(user, dispatch)\n        }}, [user])\n    \n    function set_currentTrack(result) {\n        dispatch({\n            type: \"SET_CURRENTTRACK\",\n            currentTrack: result,\n        });\n        Play({ //calling playing-function after setting current object instead of using then in serachresultview\n            playerInstance: player,\n            spotify_uri: result.uri\n\n        })\n        \n    }\n\n    function set_currentArtist(result) {\n        dispatch({\n            type: \"SET_CURRENTARTIST\",\n            currentArtist: result,\n        })\n       }\n    \n       function set_currentAlbum(result) {\n        dispatch({\n            type: \"SET_CURRENTALBUM\",\n            currentAlbum: result,\n        })\n       }\n\n\n    React.useEffect(() => setPromise(MusicSource.search({type: \"artist\", text: \"A\", token})), [token]);\n\n    return (\n        <Fragment>\n            <PopifySearchView onSearch={(type, text) => setPromise(MusicSource.search({type, text, token}))}/>\n            { promiseNoData(promise, data, error) || \n            <Fragment> \n                <SearchResultsView searchResult={data} set_currentTrack={set_currentTrack} \n                set_currentArtist={set_currentArtist} set_currentAlbum={set_currentAlbum}/>\n                <FooterView currentTrack={currentTrack} player={player} user={user} likedSongs={likedSongs} dispatch={dispatch}/> \n               \n            </Fragment>  }\n        </Fragment> \n    )\n}\n\nexport default PopifySearch; \n","//playback.js\n\nimport React from \"react\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport loadScript from \"./loadscript\";\n\nfunction Playback() {\n  \n  const [{ token }, dispatch] = useDataLayerValue();\n\n  React.useEffect(()=>{loadScript(\"https://sdk.scdn.co/spotify-player.js\")\n    \n    window.onSpotifyWebPlaybackSDKReady = () => {\n      let player = new window.Spotify.Player({\n        name: 'Popify player',\n        getOAuthToken: callback => {\n          callback(token);\n        },\n        volume: 0.1\n      })\n    // Called when connected to the player created beforehand successfully\n    player.addListener('ready', ({ device_id }) => {\n      console.log('Ready with Device ID', device_id);\n\n  \n    });\n\n    dispatch({\n      type: \"SET_PLAYER\",\n      player: player\n      });\n\n    // Connect to the player created beforehand, this is equivalent to \n    // creating a new device which will be visible for Spotify Connect\n    player.connect();\n   \n  }\n\n},[])\n\n    return \"\"\n  }\n  \n  export default Playback;\n\n","\nexport default function loadScript(url, cb) {\n\n      var scr = document.createElement('script');\n      scr.type = 'text/javascript';\n\n      if (scr.readyState) { // IE\n        scr.onreadystatechange = function() {\n          if (scr.readyState ===\"loaded\" || scr.readyState ==='complete') {\n            scr.onreadystatechange = null;\n            cb();\n          }\n        };\n      } else { // Others\n        scr.onload = cb;\n      }\n\n      scr.src = url;\n      document.getElementsByTagName('head')[0].appendChild(scr);\n    }","import React from \"react\";\nimport \"./AlbumView.css\";\nimport {Link} from \"react-router-dom\"\n\nconst AlbumView =({currentAlbum, albumTracks})=>{\n    return(\n    <div className=\"flexboxWrapper\" >\n       <div className=\"row\">\n            <div className=\"column\">\n                <div className=\"trackContainer\"> \n                \n                    <img className=\"trackPic\" src = { currentAlbum.images[0] && currentAlbum.images[0].url } alt=\"\" />\n                </div>\n            </div>\n\n\n            <div className=\"column\">\n                <div className=\"lyricsContainer\">\n                    <p>\n                        <span className=\"artistTitle\">{currentAlbum.artists[0].name}</span>\n                        <span className=\"trackTitle\">{currentAlbum.name}</span>\n                    </p>\n                    <Link to=\"/\">\n                        <button className =\"button\">Back to search</button>\n                    </Link>\n                    <div>\n                        <table className =\"albumSongList\">\n                            <thead>\n                                <tr>\n                                    <th>Nr</th>\n                                    <th>Track</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {albumTracks.items.map(item => \n                                <tr key={item.id}>\n                                    <td>{item.track_number}</td>\n                                    <td className=\"trackName\">{item.name}</td>\n                                </tr>\n                            )}\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                \n                \n                </div>\n            </div>\n\n        </div>\n        \n           \n       \n    </div>)}\n   \nexport default AlbumView; \n\n","import React, {Fragment} from \"react\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport \"./popify.css\"\nimport FooterView from \"./FooterView\";\nimport AlbumView from \"./albumView\";\nimport usePromise from './usePromise';\nimport MusicSource from \"./musicSource.js\";\n\n\nfunction AlbumInfo(){\n    \n    const [{player, user, currentTrack, currentAlbum, token}] = useDataLayerValue();\n\n    const [promise, setPromise] = React.useState(null);\n    React.useEffect(() => setPromise(currentAlbum && MusicSource.searchAlbum({id: currentAlbum.id, token})), [currentAlbum, token]);\n    const [data] = usePromise(promise);\n  \n   \n    return (\n        <Fragment>\n        {data && <AlbumView currentAlbum={currentAlbum} albumTracks={data} />}\n        <FooterView currentTrack={currentTrack} player={player} user={user}/>\n        </Fragment> \n    )\n}\n\nexport default AlbumInfo; \n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./artist.css\"\nimport \"./AlbumView.css\";\n\n\nconst LikedmusicView = ({likedSongs}) => {\n    return(\n\n\n    <div className=\"trackContainer\">\n        \n         <div><Link to=\"/\"> <button className =\"button\">Back to search</button></Link>\n            <h1 className=\"loadedTrack\" >{likedSongs}</h1>\n        </div>\n    </div>\n    )\n\n}\n\nexport default LikedmusicView ","\nimport React, {Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./popify.css\"\nimport \"./searchResult.css\"\nimport {getLikes} from \"./model/firebase-manager\"\nimport { useDataLayerValue } from \"./DataLayer\";\nimport fire from \"./firebase-config\"\nimport usePromise from './usePromise'\nimport FooterView from \"./FooterView\";\nimport LikedmusicView from \"./likedmusicView\";\n\nfunction Liked(){\n    const [{user, likedSongs, currentTrack, player, currentArtist}, dispatch] = useDataLayerValue();\n\n    return (\n        <Fragment>\n            <LikedmusicView currentArtist={currentArtist} likedSongs={likedSongs}/>\n            <FooterView currentTrack={currentTrack} player={player} user={user}/>\n        </Fragment>\n    )\n}\nexport default Liked; \n","import React from \"react\";\nimport PopifySearch from \"./PopifySearch\";\n//import LyricsSource from \"./lyricsSource\"\nimport LyricsSearch from \"./presenter/lyricsSearch\"\n//import Footer from \"./Footer\"\nimport Playback from \"./playback\"\nimport ArtistInfo from \"./artist\"\nimport AlbumInfo from \"./album\"\n\nimport Liked from \"./likedmusic.js\"\nimport { useDataLayerValue } from \"./DataLayer\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {GetUserLikes} from \"./model/firebase-manager\"\n\nfunction Main({ spotify }) {\n  const [{ player, token, user, likedSongs }, dispatch] = useDataLayerValue();\n\n  return (\n    \n    <Router>\n        <Switch>\n          <Route path=\"/lyrics\">\n            <LyricsSearch/>\n          </Route>\n          <Route path=\"/liked\">\n            <Liked/>\n          </Route>\n          <Route path=\"/artist\">\n            <ArtistInfo/>\n          </Route>\n          <Route path=\"/album\">\n            <AlbumInfo/>\n          </Route>\n          <Route path=\"/\">\n            <PopifySearch/>\n          </Route>    \n        </Switch>\n      <Playback/>\n   </Router>\n  );\n}\n\nexport default Main;\n\n","\nimport React, { useEffect } from \"react\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue, dispatch } from \"./DataLayer\";\nimport Main from \"./Main\";\nimport ArtistInfo from \"./artist\"\nimport {getLikes, GetUserLikes} from \"./model/firebase-manager\"\n\nconst spotify = new SpotifyWebApi();\n\n\n\nfunction App() {\n\n\n  const [{ token, user, likedSongs }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token; // is a Bearer token which we will be adding to every request made to the Spotify API.\n    if (_token) { // token är typ en \"nyckel\" från användaren\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({ // The wrap dispatch function recognizes that this is a promise and not an action so it waits for the \n                   // promise to resolve and passes it on\n          type: \"SET_USER\",\n          user,\n        })\n      });\n    \n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then((playlist) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist,\n        });\n      });\n    }\n  }, []);\n  \n  // const [{user}] = useDataLayerValue();\n  // const currentUser = new User(user.id)\n\n\n//if user exists we want the user to see the website otherwise login page\n\n\n  return (\n  \n\n    <div className=\"App\">\n\n      {token ?  <Main /> : <Login />}\n    \n    </div>\n\n\n  );\n}\n\nexport default App;\n","// Model\nexport const initialState = {\n  user: null,\n  token: null,\n  playlists: [],\n  playing: false,\n  item: null,\n  currentTrack: null,\n  currentArtist: null,\n  currentAlbum: null,\n  player: null,\n  currentUser: null,\n  likedSongs: [],\n};\n\nconst reducer = (state, action) => { //A special function called reducer is implemented here to act as a dispatch gun \n                                    // to shoot out data whenever needed and to save data to the wall(data layer)\n  switch (action.type) {            // switch is used to perform different actions based on different conditions\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token,\n      };\n    case \"SET_PLAYLISTS\":\n      return {\n        ...state,\n        playlists: action.playlists,\n      };\n    case \"SET_DISCOVER_WEEKLY\":\n      return {\n        ...state,\n        discover_weekly: action.discover_weekly,\n      };\n    case \"SET_CURRENTTRACK\":\n      return {\n        ...state,\n        currentTrack: action.currentTrack,\n      }\n    case \"SET_CURRENTARTIST\":\n      return {\n        ...state,\n        currentArtist: action.currentArtist, \n      }\n      case \"SET_CURRENTALBUM\":\n        return {\n          ...state,\n          currentAlbum: action.currentAlbum, \n        }\n    \n    case \"SET_PLAYER\":\n      return {\n        ...state,\n        player: action.player,\n      };\n\n      case \"SET_CURRENTUSER\":\n        return {\n          ...state,\n          currentUser: action.currentUser,\n        };\n      \n      case \"SET_LIKEDSONGS\":\n          return {\n            ...state,\n            likedSongs:action.likedSongs,\n          }\n\n        \n\n    default:\n      return state;\n  }\n};\n\nexport default reducer; \n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { DataLayer } from './DataLayer';\nimport reducer,{ initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}